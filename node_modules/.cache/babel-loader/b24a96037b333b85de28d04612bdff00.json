{"ast":null,"code":"import _classCallCheck from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vaishnavi/indegene_task/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ReactDataGrid from 'react-data-grid';\nimport CONSTANTS from './server/config.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.componentWillMount = function () {\n      _this.getRows();\n    };\n\n    _this.rowGetter = function (i) {\n      return _this.state.rows[i];\n    };\n\n    _this.getRows = function () {\n      var url = CONSTANTS.get_all_data;\n      var row = [];\n      fetch(url, {\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        for (var i = 0; i < responseJson.length; i++) {\n          console.log(responseJson);\n          row.push({\n            'first_name': responseJson[i][\"first_name\"],\n            'last_name': responseJson[i][\"last_name\"],\n            'age': responseJson[i][\"age\"],\n            'gender': responseJson[i][\"gender\"],\n            'date': responseJson[i][\"date_joining\"]\n          });\n        }\n\n        _this.setState({\n          rows: row\n        }, function () {\n          console.log(_this.state.rows);\n        });\n      });\n    };\n\n    _this.getCellActions = function (column, row) {\n      if (column.key === 'action') {\n        return [{\n          icon: \"glyphicon glyphicon-pencil\",\n          actions: [{\n            icon: React.createElement(\"span\", {\n              className: \"glyphicon glyphicon-remove\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58\n              },\n              __self: this\n            }),\n            callback: function callback() {\n              alert(\"Deleting\");\n            }\n          }]\n        }];\n      }\n    };\n\n    _this.state = {\n      rows: []\n    };\n    _this.columns = [{\n      key: 'action',\n      name: 'Action'\n    }, {\n      key: 'first_name',\n      name: 'First Name'\n    }, {\n      key: 'last_name',\n      name: 'Last Name'\n    }, {\n      key: 'age',\n      name: 'Age'\n    }, {\n      key: 'gender',\n      name: 'Gender'\n    }, {\n      key: 'date',\n      name: 'Date of Joining'\n    }];\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Table\")), React.createElement(ReactDataGrid, {\n        columns: this.columns,\n        rowGetter: this.rowGetter,\n        rowsCount: this.state.rows.length,\n        getCellActions: this.getCellActions,\n        minHeight: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/vaishnavi/indegene_task/src/App.js"],"names":["React","Component","ReactDataGrid","CONSTANTS","App","componentWillMount","getRows","rowGetter","i","state","rows","url","get_all_data","row","fetch","method","then","response","json","responseJson","length","console","log","push","setState","getCellActions","column","key","icon","actions","callback","alert","columns","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactDataGrid from 'react-data-grid';\nimport CONSTANTS from './server/config.js';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      rows:[]\n    }\n    this.columns = [\n      {key: 'action', name: 'Action'},\n      {key: 'first_name', name: 'First Name'},\n      {key: 'last_name', name: 'Last Name'},\n      {key: 'age', name: 'Age'},\n      {key: 'gender', name: 'Gender'},\n      {key: 'date', name: 'Date of Joining'},\n    ]\n  }\n\n  componentWillMount=()=>{\n    this.getRows();\n  }\n\n  rowGetter = (i) =>{return this.state.rows[i]};\n\n  getRows=()=>{\n    let url=CONSTANTS.get_all_data;\n    let row=[];\n    fetch(url,\n      {method:'GET'})\n      .then((response)=> response.json())\n      .then((responseJson)=>{\n        for (var i =  0; i < responseJson.length; i++) {\n          console.log(responseJson);\n          row.push({\n            'first_name':responseJson[i][\"first_name\"],\n            'last_name':responseJson[i][\"last_name\"],\n            'age':responseJson[i][\"age\"],\n            'gender':responseJson[i][\"gender\"],\n            'date':responseJson[i][\"date_joining\"]\n          })\n        }\n        this.setState({rows:row},()=>{\n          console.log(this.state.rows);\n        })\n      });\n  }\n\n  getCellActions=(column, row)=>{\n    if (column.key === 'action') {\n      return [{\n          icon: \"glyphicon glyphicon-pencil\",\n          actions: [\n            {\n              icon: <span className=\"glyphicon glyphicon-remove\" />,\n                callback: () => {\n                  alert(\"Deleting\");\n                }\n            }\n          ]\n        },\n        \n    ]\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n      <div className=\"table_header\"><span>Table</span></div>\n      <ReactDataGrid\n        columns={this.columns}\n        rowGetter={this.rowGetter}\n        rowsCount={this.state.rows.length}\n        getCellActions={this.getCellActions}\n        minHeight={300} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}