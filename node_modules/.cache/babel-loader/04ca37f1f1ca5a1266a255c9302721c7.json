{"ast":null,"code":"import _classCallCheck from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vaishnavi/indegene_task/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vaishnavi/indegene_task/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ReactDataGrid from 'react-data-grid';\nimport CONSTANTS from './server/config.js';\n\nvar AddModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddModal, _Component);\n\n  function AddModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddModal).call(this, props));\n\n    _this.submitPUT = function () {\n      console.log(\"inside submitPUT\");\n    };\n\n    _this.submitPOST = function () {\n      console.log(\"inside submitPOST\");\n    };\n\n    _this._render_button = function () {\n      if (Object.keys(_this.props.rowvalue).length !== 0) {\n        return React.createElement(\"div\", {\n          className: \"button-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"modal-button\",\n          onClick: function onClick() {\n            return _this.submitPUT(\"PUT\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"UPDATE\"), React.createElement(Button, {\n          className: \"modal-button\",\n          onClick: _this.props.onHide,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"CANCEL\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"button-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"modal-button\",\n          onClick: function onClick() {\n            return _this.submitPOST(\"POST\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"ADD\"), React.createElement(Button, {\n          className: \"modal-button\",\n          onClick: _this.props.onHide,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"CANCEL\"));\n      }\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(AddModal, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, Object.assign({}, this.props, {\n        bsSize: \"large\",\n        \"aria-labelledby\": \"contained-modal-title-sg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        id: \"custom-modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"User Details\"), \" \"))), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Hello\")), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this._render_button()));\n    }\n  }]);\n\n  return AddModal;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(App, _Component2);\n\n  function App() {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this2.componentWillMount = function () {\n      _this2.getRows();\n    };\n\n    _this2.rowGetter = function (i) {\n      return _this2.state.rows[i];\n    };\n\n    _this2.getRows = function () {\n      var url = CONSTANTS.get_all_data;\n      var row = [];\n      fetch(url, {\n        method: 'GET'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        for (var i = 0; i < responseJson.length; i++) {\n          console.log(responseJson);\n          row.push({\n            'first_name': responseJson[i][\"first_name\"],\n            'last_name': responseJson[i][\"last_name\"],\n            'age': responseJson[i][\"age\"],\n            'gender': responseJson[i][\"gender\"],\n            'date': responseJson[i][\"date_joining\"]\n          });\n        }\n\n        _this2.setState({\n          rows: row\n        }, function () {\n          console.log(_this2.state.rows);\n        });\n      });\n    };\n\n    _this2.getCellActions = function (column, row) {\n      if (column.key === 'action') {\n        return [{\n          icon: \"glyphicon glyphicon-pencil\",\n          callback: function callback() {\n            _this2.setState({\n              addModal: true\n            });\n          }\n        }, {\n          icon: React.createElement(\"span\", {\n            className: \"glyphicon glyphicon-remove\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }),\n          callback: function callback() {\n            alert(\"Deleting\");\n          }\n        }];\n      }\n    };\n\n    _this2.state = {\n      rows: [],\n      addModal: false\n    };\n    _this2.columns = [{\n      key: 'action',\n      name: 'Action'\n    }, {\n      key: 'first_name',\n      name: 'First Name'\n    }, {\n      key: 'last_name',\n      name: 'Last Name'\n    }, {\n      key: 'age',\n      name: 'Age'\n    }, {\n      key: 'gender',\n      name: 'Gender'\n    }, {\n      key: 'date',\n      name: 'Date of Joining'\n    }];\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Table\")), React.createElement(ReactDataGrid, {\n        columns: this.columns,\n        rowGetter: this.rowGetter,\n        rowsCount: this.state.rows.length,\n        getCellActions: this.getCellActions,\n        minHeight: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/vaishnavi/indegene_task/src/App.js"],"names":["React","Component","ReactDataGrid","CONSTANTS","AddModal","props","submitPUT","console","log","submitPOST","_render_button","Object","keys","rowvalue","length","onHide","state","App","componentWillMount","getRows","rowGetter","i","rows","url","get_all_data","row","fetch","method","then","response","json","responseJson","push","setState","getCellActions","column","key","icon","callback","addModal","alert","columns","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactDataGrid from 'react-data-grid';\nimport CONSTANTS from './server/config.js';\n\nclass AddModal extends Component {\n\n      constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n      }\n\n      submitPUT=()=>{\n        console.log(\"inside submitPUT\");\n      }\n\n      submitPOST=()=>{\n        console.log(\"inside submitPOST\");\n      }\n\n      _render_button=()=>{\n         if(Object.keys(this.props.rowvalue).length !== 0){\n           return(\n             <div className=\"button-container\">\n             <Button className=\"modal-button\" onClick={()=>this.submitPUT(\"PUT\")}>UPDATE</Button>\n             <Button className=\"modal-button\"  onClick={this.props.onHide}>CANCEL</Button>\n             </div>\n           )\n         }\n         else{\n           return(\n             <div className=\"button-container\">\n             <Button className=\"modal-button\"  onClick={()=>this.submitPOST (\"POST\")}>ADD</Button>\n             <Button className=\"modal-button\" onClick={this.props.onHide}>CANCEL</Button>\n             </div>\n           )\n         }\n      }\n\n      render() {\n        return (\n          <Modal {...this.props}  bsSize=\"large\" aria-labelledby=\"contained-modal-title-sg\">\n            <Modal.Header closeButton>\n              <Modal.Title id=\"custom-modal-title\"><div className=\"modal-title\"><h4>User Details</h4> </div></Modal.Title>\n            </Modal.Header >\n            <Modal.Body>\n              <p>Hello</p>\n            </Modal.Body>\n            <Modal.Footer>\n              {this._render_button()}\n            </Modal.Footer>\n          </Modal>\n\n        );\n      }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      rows:[],\n      addModal:false\n    }\n    this.columns = [\n      {key: 'action', name: 'Action'},\n      {key: 'first_name', name: 'First Name'},\n      {key: 'last_name', name: 'Last Name'},\n      {key: 'age', name: 'Age'},\n      {key: 'gender', name: 'Gender'},\n      {key: 'date', name: 'Date of Joining'},\n    ]\n  }\n\n  componentWillMount=()=>{\n    this.getRows();\n  }\n\n  rowGetter = (i) =>{return this.state.rows[i]};\n\n  getRows=()=>{\n    let url=CONSTANTS.get_all_data;\n    let row=[];\n    fetch(url,\n      {method:'GET'})\n      .then((response)=> response.json())\n      .then((responseJson)=>{\n        for (var i =  0; i < responseJson.length; i++) {\n          console.log(responseJson);\n          row.push({\n            'first_name':responseJson[i][\"first_name\"],\n            'last_name':responseJson[i][\"last_name\"],\n            'age':responseJson[i][\"age\"],\n            'gender':responseJson[i][\"gender\"],\n            'date':responseJson[i][\"date_joining\"]\n          })\n        }\n        this.setState({rows:row},()=>{\n          console.log(this.state.rows);\n        })\n      });\n  }\n\n  getCellActions=(column, row)=>{\n    if (column.key === 'action') {\n      return [{\n          icon: \"glyphicon glyphicon-pencil\",\n          callback: () => {\n            this.setState({addModal:true})\n          }\n        },\n        {\n          icon: <span className=\"glyphicon glyphicon-remove\" />,\n          callback: () => {\n            alert(\"Deleting\");\n          }\n      }\n    ]\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n      <div className=\"table_header\"><span>Table</span></div>\n      <ReactDataGrid\n        columns={this.columns}\n        rowGetter={this.rowGetter}\n        rowsCount={this.state.rows.length}\n        getCellActions={this.getCellActions}\n        minHeight={300} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}